function f(){}const p=e(/[A-Za-z]/),x=e(/[\dA-Za-z]/),h=e(/[#-'*+\--9=?A-Z^-~]/);function g(n){return n!==null&&(n<32||n===127)}const m=e(/\d/),S=e(/[\dA-Fa-f]/),k=e(/[!-/:-@[-`{-~]/);function A(n){return n!==null&&n<-2}function w(n){return n!==null&&(n<0||n===32)}function l(n){return n===-2||n===-1||n===32}const E=e(new RegExp("\\p{P}|\\p{S}","u")),I=e(/\s/);function e(n){return t;function t(i){return i!==null&&i>-1&&n.test(String.fromCharCode(i))}}function d(n,t,i,r){const u=r?r-1:Number.POSITIVE_INFINITY;let s=0;return c;function c(a){return l(a)?(n.enter(i),o(a)):t(a)}function o(a){return l(a)&&s++<u?(n.consume(a),o):(n.exit(i),t(a))}}function C(n,t){const i=String(n);let r=i.indexOf(t),u=r,s=0,c=0;if(typeof t!="string")throw new TypeError("Expected substring");for(;r!==-1;)r===u?++s>c&&(c=s):s=1,u=r+t.length,r=i.indexOf(t,u);return c}export{x as a,w as b,E as c,p as d,g as e,d as f,h as g,l as h,k as i,S as j,m as k,C as l,A as m,f as o,I as u};
